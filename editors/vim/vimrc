"" ****************************************************************************
"" Helpful settings
"" ****************************************************************************
autocmd! bufwritepost .vimrc source %       " reload vimrc if opened & saved
let mapleader=","                           " use ',' as leader
set nocompatible                            " make vim more vim like


"" ****************************************************************************
"" Plugins
"" ****************************************************************************
call plug#begin('~/.vim/plugged')
" Statusbar *******************************************************************
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
let g:airline_theme='bubblegum'     " nice Airline theme
let g:airline_powerline_fonts = 1   " use better-looking Powerline symbols
" Colortheme ******************************************************************
Plug 'dracula/vim'
" Alignment *******************************************************************
Plug 'junegunn/vim-easy-align'
" GitHub **********************************************************************
Plug 'junegunn/vim-github-dashboard'
" Git *************************************************************************
Plug 'tpope/vim-fugitive'
Plug 'airblade/vim-gitgutter'
" NERDTree ********************************************************************
Plug 'scrooloose/nerdtree'
let g:NERDTreeMinimalUI = 1
" toggle NERDTree
nnoremap <leader>n :NERDTreeToggle<CR>
" fold/unfold dirs & double click
let NERDTreeMouseMode = 2
" highlight selected entry in tree
let NERDTreeHighlightCursorline = 1
" ignore following extenstions
let NERDTreeIgnore = [
  \ '\.pyc$', '\.pyo$', '\.py\$class$', '\.obj$',
  \ '\.o$', '\.so$', '\.egg$', '^\.git$',
  \ '__pycache__', '\.DS_Store'
  \ ]
" close vim if only NERDTree is opened
autocmd bufenter *
  \   if (winnr("$") == 1 &&
  \       exists("b:NERDTree") &&
  \       b:NERDTree.isTabTree()
  \   ) | q | endif
" git support for Nerdtree
Plug 'Xuyuanp/nerdtree-git-plugin'
let g:NERDTreeIndicatorMapCustom = {
  \   "Modified"  : "✹",
  \   "Staged"    : "✚",
  \   "Untracked" : "✭",
  \   "Renamed"   : "➜",
  \   "Unmerged"  : "═",
  \   "Deleted"   : "✖",
  \   "Dirty"     : "✗",
  \   "Clean"     : "✔︎",
  \   'Ignored'   : '☒',
  \   "Unknown"   : "?"
  \   }
" indent line
Plug 'Yggdroot/indentLine'
let g:indentLine_char = '│'
" fzf - finding things fast
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plug 'junegunn/fzf.vim'
call plug#end()


"" ****************************************************************************
"" Spaces and Tabs
"" ****************************************************************************
set tabstop=2		    " number of visual spaces per TAB
set softtabstop=2   " number of spaces in tab when editing
set shiftwidth=2    " number of spaces to use for indent
set expandtab       " tabs are spaces


"" ****************************************************************************
"" UI config
"" ****************************************************************************
syntax on                   " use syntax highlighting
color dracula               " best Colorscheme ever
set number                  " show line numbers
set cursorline              " highlight current line
set wildmenu                " visual autocomplete for command menu
set lazyredraw              " redraw only when we need to.
set showmatch               " highlight matching [{()}]
filetype indent plugin on   " automatic lang-dependent ident
set mouse=a                 " allow mouse usage


"" ****************************************************************************
"" Searching
"" ****************************************************************************
set ignorecase      " case of normal letter is ignored
set smartcase       " ignore case when lowercase letters only
set incsearch       " search as characters are entered
set hlsearch        " highlight matches
" start search using space
nnoremap <space> /
" turn off search highlight
nnoremap <leader><space> :nohlsearch<CR>


"" ****************************************************************************
"" FIXES
"" ****************************************************************************
" forces neovim to use english as default language
if has("nvim")
  language en_US
endif

